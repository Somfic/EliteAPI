name: ci
permissions: write-all
on:
  push:
  pull_request:

jobs:
  check-frontend:
    name: check frontend
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Bun
      uses: oven-sh/setup-bun@v2
      with:
        bun-version: latest

    - name: Cache Bun dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.bun
          node_modules/
        key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb', '**/package.json') }}

    - name: Install dependencies
      run: bun install

    - name: Check frontend
      run: bun run check

  check-backend:
    name: check backend
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
          components: rustfmt, clippy, llvm-tools-preview
    
      - name: Set up cargo cache
        uses: actions/cache@v4
        continue-on-error: false
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/            
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock', '**/Cargo.toml') }}

      - name: Set up Rust tools
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: install rust dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.1 libayatana-appindicator3-dev librsvg2-dev

      # - name: install macos intel target
      #   if: matrix.platform == 'macos-latest' && matrix.args == '--target x86_64-apple-darwin'
      #   run: rustup target add x86_64-apple-darwin

      - name: Check backend
        run: cargo check
        working-directory: src-tauri
